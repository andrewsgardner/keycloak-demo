CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE IF NOT EXISTS users (
  id uuid DEFAULT uuid_generate_v4(), 
  username VARCHAR NOT NULL,
  first_name VARCHAR NOT NULL,
  last_name VARCHAR NOT NULL,
  PRIMARY KEY (username)
);

INSERT INTO users (username, first_name, last_name) VALUES ('rsmith', 'Rachel', 'Smith'), ('jpatel', 'Jason', 'Patel'), ('fwatkins', 'Frank', 'Watkins');

CREATE TABLE IF NOT EXISTS projects (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    --project_id TEXT GENERATED ALWAYS AS ('PRJ-' || id::text) STORED,
    project_name VARCHAR(255) NOT NULL,
    created_by VARCHAR REFERENCES users(username),
    create_date TIMESTAMP DEFAULT current_timestamp,
    modified_by VARCHAR REFERENCES users(username),
    modified_date TIMESTAMP DEFAULT current_timestamp,
    PRIMARY KEY (id)
);

INSERT INTO projects (project_name, created_by, modified_by) VALUES ('Hello World App', 'rsmith', 'rsmith');

CREATE TABLE IF NOT EXISTS issues (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    --issue_id TEXT GENERATED ALWAYS AS ('ISSUE-' || id::text) STORED,
    issue_summary VARCHAR(255) NOT NULL,
    issue_description VARCHAR(4000),
    created_by VARCHAR REFERENCES users(username),
    create_date TIMESTAMP DEFAULT current_timestamp,
    modified_by VARCHAR REFERENCES users(username),
    modified_date TIMESTAMP DEFAULT current_timestamp,
    issue_status VARCHAR(30) NOT NULL CHECK (issue_status IN ('Open', 'On-Hold', 'Closed')),
    issue_priority VARCHAR(30) CHECK (issue_priority IN ('High', 'Medium', 'Low')),
    target_resolution_date DATE,
    actual_resolution_date DATE,
    resolution_summary VARCHAR(4000),
    assigned_to VARCHAR REFERENCES users(username),
    PRIMARY KEY (id)
);

CREATE OR REPLACE FUNCTION issue_status_trg()
  RETURNS trigger AS
$func$ 
BEGIN  
   CASE TG_OP
    WHEN 'INSERT' THEN
        IF NEW.issue_status IS NULL THEN 
            NEW.issue_status := 'Open';
        END IF;
    WHEN 'UPDATE' THEN
        IF NEW.actual_resolution_date IS NOT NULL THEN 
            NEW.issue_status := 'Closed';
        END IF;
    ELSE
        RAISE EXCEPTION '[issue_status_trg]: This trigger function expects INSERT or UPDATE!';
   END CASE;
   RETURN NEW;
END
$func$  LANGUAGE plpgsql;

-- Add trigger to process changes to issue_status
CREATE TRIGGER issue_status_change
BEFORE INSERT OR UPDATE ON issues
FOR EACH ROW EXECUTE PROCEDURE issue_status_trg();

INSERT INTO issues (issue_summary, issue_description, created_by, modified_by, issue_priority, assigned_to) VALUES ('Hook up endpoints in new XYZ service', 'Integrate the client application with all endpoints of the XYZ service. This includes GET, POST, PUT, and DELETE operations.', 'rsmith', 'rsmith', 'High', 'fwatkins');
INSERT INTO issues (issue_summary, issue_description, created_by, modified_by, issue_priority, assigned_to) VALUES ('Whitelist XYZ service as an allowed CORS origin', 'Update the list of allowed CORS origins to include the address for XYZ service on http://localhost:7000.', 'rsmith', 'rsmith', 'Medium', 'fwatkins');
INSERT INTO issues (issue_summary, issue_description, created_by, modified_by, issue_priority, assigned_to) VALUES ('Store all timestamps in UTC', 'All timestamps should be stored in PostgreSQL in UTC, and then displayed to the user in their local timezone. Audit the application to find and fix all occurrences where EST timestamps are propagated to PostgreSQL.', 'fwatkins', 'fwatkins', 'Medium', 'fwatkins');
INSERT INTO issues (issue_summary, issue_description, created_by, modified_by, issue_priority, assigned_to) VALUES ('Fix broken link to about page', 'There is a broken link to the about page in the header. Please fix the url to point to the correct location.', 'fwatkins', 'fwatkins', 'Low', 'fwatkins');
INSERT INTO issues (issue_summary, issue_description, created_by, modified_by, issue_status, issue_priority, actual_resolution_date, resolution_summary, assigned_to) VALUES ('Upgrade Node.js', 'Upgrade Node.js in the client to version 20.11.1.', 'fwatkins', 'fwatkins', 'Closed', 'Low', DATE '2024-02-19', 'The client has successfully been upgraded to Node.js 20.11.1. I performed all unit tests and there are no known issues.', 'fwatkins');